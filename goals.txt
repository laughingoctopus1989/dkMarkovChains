project abstract:
	I know the basics of python scripting, so I decided to look for a programming challenge. I think I understand what Markov Chains are, but as you can see from the "dk" in the project name, I am assuming that I am very very wrong. My objective for this project is for the script to generate a "forecast" of weather using the principles of markov chains to make a random but mildly predictable pattern. 

planning:
	My main idea is to have each weather event to have a set chance of:
		A. staying the same
		B. progressing to the next weather event
		C. going back to the previous weather event
	I believe this implements the basic idea behind markov chains, and I think it will be effective

potential issues:
	How will the initial order of the weather events be set? Could the array be have a random order on execution?
issues in development:
	The order wasn't really an issue as I just used random.shuffle at the beginning to ensure a random order, the 
	real issue was finding a way to get the state to switch backwards and forwards inside of an array. Originally
	I just put a bunch of shuffle functions because it was "good enough", but that's not really shifting 
	backwards and forwards. I looked up and saw that you can do 'x, y = y, x' to shift variable values and realized I could do	  that to "rotate" the values, which is what rotate_test.py was used to test. 
conclusion:
	pretty fun project, learned some new stuff, 8/10.
